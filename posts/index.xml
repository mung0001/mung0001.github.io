<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blog on 뭉게뭉게</title>
    <link>https://mung0001.github.io/posts/</link>
    <description>Recent content in Blog on 뭉게뭉게</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>kr-ko</language>
    <lastBuildDate>Fri, 28 Aug 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://mung0001.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>정보처리기사 합격후기</title>
      <link>https://mung0001.github.io/posts/%EC%A0%95%EC%B2%98%EA%B8%B0/</link>
      <pubDate>Fri, 28 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://mung0001.github.io/posts/%EC%A0%95%EC%B2%98%EA%B8%B0/</guid>
      <description>정보치리기사 시험합격 후기    정보처리기사 1, 2화 통합 필기   공부기간   약 3개월, 기존 1개월로 잡았으나 코로나로 시험이 반복적으로 미루어져서 공부를 하다말다 하다말다 했습니다.
  전공자라면 1주일도 충분히 가능하고, 비전공자여도 한 달이면 충분히 가능하다 생각됩니다.
       시험내용   기본적으로 시험범위가 상당히 넓어 초독에는 많은 시간이 필요하다 생각됩니다. 그렇기에 핵심키워드 위주로 공부하시고, 다독하시는 걸 추천드립니다.
  개정 후의 시험은 개정전과 많이 다르다고 공시되어 있지만, 또 그렇게 다르지도 않다고 많이들 말씀하셨습니다.</description>
    </item>
    
    <item>
      <title>Lambda</title>
      <link>https://mung0001.github.io/posts/lambda/</link>
      <pubDate>Mon, 06 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://mung0001.github.io/posts/lambda/</guid>
      <description>Lambda   Lambda는 기본적으로 AWS의 서비스 중 하나인 Lambda를 의미하며 일반적으로 서버리스 아키텍처로 사용됩니다.
  여기서 서버리스 아키텍처란 실행을 위해 서버에 직접 접근하지 않는 새로운 종류의 소프트웨어 아키텍처를 의미합니다.
  Lambda는 AWS 기반에서 자바스크립트, 파이썬, C#, 자바로 작성한 코드를 실행하는 컴퓨팅 서비스입로, 소스 코드는 압축되어 메모리, 디스크 공간과 CPU가 할당된 격리된 컨테이너에 배포됩니다.
  그럼 본격적으로 Lambda에 대해 알아보도록 하겠습니다.
     Server or Serverless   Server  상단의 그림은 기본적인 3 tier 애플리케이션의 구조입니다.</description>
    </item>
    
    <item>
      <title>Window 10 무설치 정품인증</title>
      <link>https://mung0001.github.io/posts/window10/</link>
      <pubDate>Sun, 05 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://mung0001.github.io/posts/window10/</guid>
      <description>Window 10 무설치 정품인증    단순히 Window 10의 명령프롬프트를 사용하여 간단하게 윈도우 인증을 완료하는 방법을 알려드리겠습니다.    명령프롬프트를 사용한 정품인증   먼저 검색 or 실행 ( Window 키 + R )에서 dxdiag 또는 winver를 검색 후, 운영체제의 버전을 확인해주세요. 위의 그림은 winver를 통해 확인한 모습입니다.      다음으로는 인증 키의 설정을 위해 위의 그림과 같이 명령 프롬프트를 관리자 권한으로 실행합니다.      아래의 명령어를 입력해주세요.</description>
    </item>
    
    <item>
      <title>클라우드란? (CloudComputing)</title>
      <link>https://mung0001.github.io/posts/cloud/</link>
      <pubDate>Fri, 10 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://mung0001.github.io/posts/cloud/</guid>
      <description>클라우드란?   클라우드 (Cloud)    클라우드의 영어 ‘Cloud’는 우리가 흔히 알고 있는 &amp;lsquo;구름’을 뜻합니다. 컴퓨터 파일을 저장할 때 작업한 컴퓨터 내부에 있는 공간이 아니라 인터넷을 통하여 중앙 컴퓨터에 저장할 수 있는 데 이 공간을 클라우드라 합나다.
  즉, 클라우드를 정의하기는 모호한 면이 있지만, 기본적으로 각각 고유한 기능을 가진 서버의 글로벌 네트워크를 설명하는 데 사용되는 용어입니다.
  클라우드는 실제 엔터티가 아니지만 함께 연결되어 하나의 에코시스템으로 작동하게 되어 있는 ​전 세계에 분산된 원격 서버의 광대한 네트워크로, 이러한 서버는 데이터의 저장 및 관리, 애플리케이션 실행 또는 스트리밍 비디오, 웹 메일, 오피스 생산성 소프트웨어 또는 소셜 미디어와 같은 미디어와 같은 콘텐츠 또는 서비스를 제공하도록 설계되어 있습니다.</description>
    </item>
    
    <item>
      <title>퍼블릭 클라우드 ( Public Cloud )</title>
      <link>https://mung0001.github.io/posts/publiccloud/</link>
      <pubDate>Fri, 10 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://mung0001.github.io/posts/publiccloud/</guid>
      <description>퍼블릭 클라우드 ( Public Cloud )     클라우드는 그 서비스 형태에 따라 퍼블릭( Public Cloud ), 하이브리드 클라우드 (Hybrid Cloud ), 프라이빗 클라우드 ( Pivate Cloud ), 커뮤니티( Community Cloud )로 나뉘어저 있습니다.
  이번에는 그 중 퍼블릭 클라우드 ( Public Cloud )에 대해 알아보겠습니다.
  퍼블릭 클라우드( Publci Cloud )란 외부 클라우드 사업자가 제공하는 서비스를 통해 클라우드를 이용하는 것으로, 우리가 가장 흔히 접할 수 있는 서비스 형태입니다.</description>
    </item>
    
    <item>
      <title>프라이빗 클라우드 (Private Cloud)</title>
      <link>https://mung0001.github.io/posts/privatecloud/</link>
      <pubDate>Fri, 10 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://mung0001.github.io/posts/privatecloud/</guid>
      <description>프라이빗 클라우드 (Private Cloud)     클라우드는 그 서비스 형태에 따라 퍼블릭( Public Cloud ), 하이브리드 클라우드 (Hybrid Cloud ), 프라이빗 클라우드 ( Pivate Cloud ), 커뮤니티( Community Cloud )로 나뉘어저 있습니다.
  이번에는 그 중 프라이빗 클라우드 ( Private Cloud )에 대해 알아보겠습니다.
  프라이빗 클라우드란 기업이 직접 클라우드 환경을 구축하고 이를 기업 내부에서 활용하거나 또는 계열사에 공개하는 것을 뜻합니다.
     프라이빗 클라우드의 개념   프라이빗 클라우드의 개념     외부 클라우드 사업자의서비스를 이용하지 않고 서비스를 위한 인프라를 직접 구축한다는 점에서 프라이빗 클라우드는 자체 인프라 구축과 동일하다고 할 수 있습니다.</description>
    </item>
    
    <item>
      <title>하이브리드 클라우드 ( Hybrid Cloud )</title>
      <link>https://mung0001.github.io/posts/hybridcloud/</link>
      <pubDate>Fri, 10 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://mung0001.github.io/posts/hybridcloud/</guid>
      <description>하이브리드 클라우드 ( Hybrid Cloud )     클라우드는 그 서비스 형태에 따라 퍼블릭( Public Cloud ), 하이브리드 클라우드 (Hybrid Cloud ), 프라이빗 클라우드 ( Pivate Cloud ), 커뮤니티( Community Cloud )로 나뉘어저 있습니다.
  이번에는 그 중 하이브리드 클라우드 ( Hybrid Cloud )에 대해 알아보겠습니다.
  하이브리드 클라우드는 퍼블릭 클라우드( Public Cloud )와 프라이빗 클라우드 ( Pivate Cloud )를 결합하여 데이터와 애플리케이션을 공유할 수 있는 컴퓨팅 환경으로, 하이브리드 컴퓨팅은 컴퓨팅 및 처리 요구가 변동될 때 타사 데이터 센터에서 데이터 전체에 엑세스하지 않고도 온-프레미스 공용 클라우드로 원할하게 확장하여 오버플로를 처리할 수 있는 기능을 기업에게 제공하는 것을 뜻합니다.</description>
    </item>
    
    <item>
      <title>테스트</title>
      <link>https://mung0001.github.io/posts/goisforlovers/</link>
      <pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>https://mung0001.github.io/posts/goisforlovers/</guid>
      <description>Hugo uses the excellent Go html/template library for its template engine. It is an extremely lightweight engine that provides a very small amount of logic. In our experience that it is just the right amount of logic to be able to create a good static website. If you have used other template systems from different languages or frameworks you will find a lot of similarities in Go templates.
This document is a brief primer on using Go templates.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://mung0001.github.io/posts/base/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://mung0001.github.io/posts/base/</guid>
      <description>****          **** </description>
    </item>
    
  </channel>
</rss>