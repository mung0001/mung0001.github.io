<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Git on 뭉게뭉게</title>
    <link>https://mung0001.github.io/docs/system/development/git/</link>
    <description>Recent content in Git on 뭉게뭉게</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>kr-ko</language><atom:link href="https://mung0001.github.io/docs/system/development/git/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Git</title>
      <link>https://mung0001.github.io/docs/system/development/git/git/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://mung0001.github.io/docs/system/development/git/git/</guid>
      <description>Git과 Github##깃 ( git )##Git 공식 홈페이지 에서 다운로드
형상 관리 도구 ( Configuration Management Tool )인 분산형 관리 시스템
무료, 공개소프트웨어 서비스
소스코드를 주고 받을 필요 없이, 같은 파일을 여러 명이 동시에 작업하는 병렬 개발이 가능
분산 버전관리이기 때문에 인터넷이 연결되지 않은 곳에서도 개발을 진행할 수 있으며, 중앙 저장소가 날라가벌도 다시 원상복구가 가능
#git의 특징##버전관리 깃에서 버전이란 문서를 수정하고 저장할 때마다 생기는 지점</description>
    </item>
    
    <item>
      <title></title>
      <link>https://mung0001.github.io/docs/system/development/git/hugo/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://mung0001.github.io/docs/system/development/git/hugo/</guid>
      <description>Hugo##휴고 다운로드
#So cutey
Hugo는 Go언어를 기반으로 Go 언어를 이용한 프로그램 사용 및 수정
Markdown으로 글을 작성
git을 활용한 글 관리 및 버전 관리
#Hugo 적용##Hugo 환경변수 등록
휴고 사이트 시작
hugo new site testproject cd testproject hugo server -D #테마 적용 Hugo 테마 다운로드
testproject 안의 themes 폴더에 테마를 넣는다
config.toml 파일에 theme = &amp;ldquo;테마이름을 추가&amp;rdquo;
themes/[ 테마이름 ]/examplesite/로 이동 후 config 파일을 제외한 모든 파일을 복사하여 testproject 아래에 복사한다.</description>
    </item>
    
  </channel>
</rss>
