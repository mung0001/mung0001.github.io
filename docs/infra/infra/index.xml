<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Infra engineer on 뭉게뭉게</title>
    <link>https://mung0001.github.io/docs/infra/infra/</link>
    <description>Recent content in Infra engineer on 뭉게뭉게</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>kr-ko</language><atom:link href="https://mung0001.github.io/docs/infra/infra/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Infra engineer란?</title>
      <link>https://mung0001.github.io/docs/infra/infra/infra01/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://mung0001.github.io/docs/infra/infra/infra01/</guid>
      <description>Infra engineer##Infra enginner의 정의와 역할##Infra enginner란 Infra(infrastructure)와 enginner의 합성어로 IT의 기본 틀을 잡는 역할을 수행한다고 할 수 있습니다.
Architecture와 Infra의 차이는 아키텍처는 컴퓨터와 소프트웨어의 호환성, 더 나아가 최근에는 기업에 적합한 클라우드 컴퓨팅을 설계해준다 할 수 있으며, Infra enginner은 기본적인 하드웨어의 세팅(IDC, VDI)을 주로 다룬다고 할 수 있습니다.
하지만 최근 클라우드 시장이 급격하게 성장함에 따라, 사실상 Infra enginner의 영역이 줄어들고 있는 것은 사실이지만, 대부분의 IT시장의 기본이 되는 만큼 공부할 가치가 있습니다.</description>
    </item>
    
    <item>
      <title>Server</title>
      <link>https://mung0001.github.io/docs/infra/infra/infra02/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://mung0001.github.io/docs/infra/infra/infra02/</guid>
      <description>Server###Server Type##설치 장소나 용도가 다양하여 서버는 여러 모델이 존재합니다. #랙 마운트형 서버 #랙 마운트형 서버는 데이터 센터나 서버 룸에 설치된 랙 안에 들어가는 서버로 19인치 랙에 수용하는 것을 전제로 하며, 기기는 1U, 2U처럼 유닛 단위로 사이즈가 정해져 있으며, 1U 높이가 1.75인치로 확장성을 위해 2U 사이즈 이상인 서버가 많습니다. #타워형 서버
타워형 서버는 기본적으로 우리가 사용하고 있는 Desktop PC입니다. 서버는 냉방과 소음을 고려해서 설치 장소를 골라야 합니다.</description>
    </item>
    
    <item>
      <title>Operating System</title>
      <link>https://mung0001.github.io/docs/infra/infra/infra03/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://mung0001.github.io/docs/infra/infra/infra03/</guid>
      <description>운영체제의 종류###Linux Server##오픈소스의 대표적인 운영체제로는 리눅스를 제일 먼저 꼽을 수 있으며, 리눅스에는 여러 배포판이 존재합니다.
배포판에 따라 애프리케이션 및 패키지 관리방법에 차이가 있으며, 각 설치 방법에도 차이가 존재합니다.
유상지원에는 대부분 Red hat 계열을 선택하며, 유상지원이 필요없을 시에는 다른 계열을 주로 사용합니다.
#레드햇 계열 Red hat Enterprise Linux
CentOS
Fedora
Vine Linux
Scientific Linux
Oracle Linux
#데비안 계열 Debian
KNOPPIX
Ubuntu</description>
    </item>
    
    <item>
      <title>Network</title>
      <link>https://mung0001.github.io/docs/infra/infra/infra04/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://mung0001.github.io/docs/infra/infra/infra04/</guid>
      <description>Network###Network Equipment##기본적으로 네트워크를 구축하려면 네트워크 장비가 필요하며, 네트워크 장비에는 라우터와 스위치 등 다양한 장비가 있으므로 이에 대한 학습이 필요합니다. #Router##라우터는 수신한 패킷을 적절한 경로로 전송하는 네트워크로 장비로, 네트워크를 논리적으로 나누는 장비입니다.
인터넷은 전 세계에 걸친 하나의 거대한 네트워크이며, 인터넷에는 LAN(Local Area Network)라 불리는 무수한 로컬 네트워크가 있고, LAN끼리는 라우터라고 불리는 장비를 매개로 연결되어 집니다.
LAN에서 WAN(Wide Area Network)으로 날아가는 메시지가 발생하면 라우터를 통해서 다른 LAN의 라우터로 메시지를 전달(라우팅)으로 통신이 이루어집니다.</description>
    </item>
    
    <item>
      <title>Storage</title>
      <link>https://mung0001.github.io/docs/infra/infra/infra05/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://mung0001.github.io/docs/infra/infra/infra05/</guid>
      <description>Storage###Storage Type##일반적으로 데이터를 저장하는 장치를 스토리지라 합니다.
스토리지에는 서버 내부의 저장영역인 로컬 스토리지와 서버 외부의 저장 영역인 외부 스토리지가 있습니다.
외부 스토리지에는 서버에 직접 연결하는 DAS와 네트워크를 통해 연결하는 NAS, SAN이 있습니다.
##로컬 스토리지##로컬 스토리지란 서버 내부에 디스크를 설치해서 이용하는 저장 영역을 의미하며, 외부 스토리지를 사용하지 않으므로 설치 공간을 절약할 수 있습니다.
단, 외부 스토리지를 이용할 때와 비교해서 설치할 수 있는 디스크의 개수와 확정성이 적은 특징이 있습니다.</description>
    </item>
    
    <item>
      <title>Solution</title>
      <link>https://mung0001.github.io/docs/infra/infra/infra06/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://mung0001.github.io/docs/infra/infra/infra06/</guid>
      <description>Solution###Solution##IT 인프라 운영에 이용되는 여러 장비를 효율적으로 관리하기위해서 다양한 솔루션을 활용합니다. ##감시 솔루션##나기오스 감시 솔루션
웹 설정 화면이 없으며 설정을 텍스트 파일로 저장힙니다.
장애가 발생했는 지에 대한 이력을 데이터베이스가 아닌 텍스트 파일에 저장합니다.
감시 설정은 플러그인으로 추가할 수 있으며, 플러그인은 직접 만들 수 있고, 전용 커뮤니티에도 다량 공개되어 있습니다.
#자빅스 솔루션
서버 네트워크 디바이스의 오토 디스커버리 지원</description>
    </item>
    
    <item>
      <title>Infra operation</title>
      <link>https://mung0001.github.io/docs/infra/infra/infra07/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://mung0001.github.io/docs/infra/infra/infra07/</guid>
      <description>Infra operation###Infra operation##장애 대응##하드에어는 언젠가 반드시 고장이 난다는 생각 때문에 서비스를 멈추지 않도록 하는 방향으로 진화했습니다.
엔지니어에게 감시 솔루션은 장애 감지를 위해 특히 중요한 도구로, 장애를 빠르고 확실하게 감지하기 위해서는 감시 솔루션 없이는 불가능합니다.
감시 솔루션을 신중하게 선택하고 모든 보유 기기에서 일어날 수 있는 온갖 장애 패턴을 모두 확실히 감지할 수 있도록 엄격하게 설정해야 합니다.
##병목현상 해결##일반적으로 IT 시스템에서는 병목이 한 군데만 있어돋 시스템 전체의 응답에 악영향을 끼칩니다.</description>
    </item>
    
  </channel>
</rss>
